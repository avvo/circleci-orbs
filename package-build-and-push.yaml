version: 2.1

description: |
  Automates the many steps needed to build packages (gems, NPM packages, etc.)
  and push them to whichever repos Avvo is using these days.

examples:
  basic_commands:
    description: "Build a gem and push it to one or more gem repos"
    usage:
      version: 2.1
      orbs:
        package-build-and-push: avvo/package-build-and-push@0.0.1
      jobs:
        build:
          docker:
            - image: circleci/ruby:2.6
          steps:
            - checkout
            - package-build-and-push/gem-build-and-push

orbs:
  aws-white-list-circleci-ip: avvo/aws-white-list-circleci-ip@0.0.1

commands: 

  setup-generic-environment:
    description: Common setup tasks
    steps:
      - run:
          name: "Set AVVO_BUILD_TAG environment variable"
          command: echo "export AVVO_BUILD_TAG=avvo_$(echo $CIRCLE_PROJECT_REPONAME | sed 's/-/_/g;')_${CIRCLE_BUILD_NUM}_$(eval date +%s)" >> $BASH_ENV
      - aws-white-list-circleci-ip/add:
          tag-key: Role
          tag-value: avvo_repo_ingress_control
          description: "${AVVO_BUILD_TAG}"

  teardown-generic-environment:
    description: Common teardown tasks
    steps:
      - aws-white-list-circleci-ip/remove:
          tag-key: Role
          tag-value: avvo_repo_ingress_control
          description: "${AVVO_BUILD_TAG}"

  setup-gem-environment:
    description: Prepares the local environment for building and pushing gems
    parameters:
      packagecloud_read_token:
        description: The token to be used when fetching packages from Packagecloud.
        type: env_var_name
        default: PACKAGECLOUD_READ_TOKEN
      gem_repo_host:
        description: The host to which built packages should be pushed. 
        type: env_var_name
        default: AVVO_GEM_REPO_HOST
      gem_repo_key:
        description: The :rubygems_api_key used to access the gem repository host
        type: env_var_name
        default: AVVO_GEM_REPO_TOKEN
    steps:
      - setup-generic-environment
      - run:
          name: "Configure Packagecloud"
          command: |
            if [ -n "$PACKAGECLOUD_READ_TOKEN" ]; then
              gem install package_cloud
              bundle config packagecloud.io $PACKAGECLOUD_READ_TOKEN
            else
              echo '$PACKAGECLOUD_READ_TOKEN not set, not installing and configuring package_cloud gem'
            fi
      - run:
          name: "Configure destination gem repo"
          command: |
            printf -- "---\n:rubygems_api_key: Basic $AVVO_GEM_REPO_TOKEN\n" > $HOME/.gem/credentials
            chmod 0600 $HOME/.gem/credentials

  teardown-gem-environment:
    description: Cleans up after building and pushing gems
    steps:
      - teardown-generic-environment

  gem-build:
    description: Perform the actual gem build
    steps:
      - run:
          name: Build the gem
          command: |
            rm -f *.gem
            gem build $(ls *.gemspec)

  gem-push:
    description: Push the built gem to its destination repository
    parameters:
      gem_repo_host:
        description: The host to which built packages should be pushed
        type: env_var_name
        default: AVVO_GEM_REPO_HOST
      packagecloud_gem_repo:
        description: The Packagecloud repo in which gems will be stored
        type: env_var_name
        default: PACKAGECLOUD_GEM_REPO
    steps:
      - run:
          name: "Push gem(s) to Packagecloud"
          command: |
            if [ -n "$PACKAGECLOUD_GEM_REPO" ]; then
              package_cloud push $PACKAGECLOUD_GEM_REPO $(ls *.gem)
            else
              echo '$PACKAGECLOUD_GEM_REPO not set, not pushing built gem(s) to package_cloud'
            fi
      - run:
          name: "Push gem(s) to private gem repo"
          command: gem push "$(ls *.gem)" --host https://$AVVO_GEM_REPO_HOST -v

  gem-build-and-push:
    description: Builds and pushes a gem to one or more gem repositories
    parameters:
      packagecloud_read_token:
        description: The token to be used when fetching packages from Packagecloud
        type: env_var_name
        default: PACKAGECLOUD_READ_TOKEN
      packagecloud_gem_repo:
        description: The Packagecloud repo in which gems will be stored
        type: env_var_name
        default: PACKAGECLOUD_GEM_REPO
      gem_repo_host:
        description: The host to which built packages should be pushed
        type: env_var_name
        default: AVVO_GEM_REPO_HOST
      gem_repo_key:
        description: The :rubygems_api_key used to access the gem repository
        type: env_var_name
        default: AVVO_GEM_REPO_TOKEN
    steps:
      - setup-gem-environment
      - gem-build
      - gem-push
      - teardown-gem-environment
